// GENERATED CODE - DO NOT MODIFY BY HAND
// This code was generated by ObjectBox. To update it run the generator again
// with `dart run build_runner build`.
// See also https://docs.objectbox.io/getting-started#generate-objectbox-code

// ignore_for_file: camel_case_types, depend_on_referenced_packages
// coverage:ignore-file

import 'dart:typed_data';

import 'package:flat_buffers/flat_buffers.dart' as fb;
import 'package:objectbox/internal.dart'
    as obx_int; // generated code can access "internal" functionality
import 'package:objectbox/objectbox.dart' as obx;
import 'package:objectbox_flutter_libs/objectbox_flutter_libs.dart';

import 'src/db/entities/attachment_entity.dart';
import 'src/db/entities/avatar_entity.dart';
import 'src/db/entities/conversation_entity.dart';
import 'src/db/entities/message_entity.dart';
import 'src/db/entities/user_entity.dart';

export 'package:objectbox/objectbox.dart'; // so that callers only have to import this file

final _entities = <obx_int.ModelEntity>[
  obx_int.ModelEntity(
      id: const obx_int.IdUid(1, 2083168856616622261),
      name: 'AttachmentEntity',
      lastPropertyId: const obx_int.IdUid(4, 5590802489791299855),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 5813755567765050557),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 2598453969112274346),
            name: 'fileId',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(1, 3985245229474858253)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9145044455135425987),
            name: 'fileName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 5590802489791299855),
            name: 'fileBlurHash',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(2, 6918202109537402906),
      name: 'AvatarEntity',
      lastPropertyId: const obx_int.IdUid(5, 6380047012876766535),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 6438701760314840495),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 4695719793845453187),
            name: 'fileId',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(2, 1908696212979929316)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 6314488510877905217),
            name: 'fileName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 3271216996689882758),
            name: 'fileBlurHash',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 6380047012876766535),
            name: 'imageUrl',
            type: 9,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(3, 5487033076272012390),
      name: 'ConversationEntity',
      lastPropertyId: const obx_int.IdUid(12, 5942505151512357888),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 3456785938009755266),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 3633717856401305859),
            name: 'uid',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(3, 2330488784722707626)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 4375214362308418179),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4477377261154987816),
            name: 'updatedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 8748385958730009606),
            name: 'type',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 6323590858319605034),
            name: 'name',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 9168000509218833904),
            name: 'description',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 5364493506422957153),
            name: 'unreadMessagesCount',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 522372722417879397),
            name: 'lastMessageId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(4, 5067472189057875758),
            relationTarget: 'MessageEntity'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 6073599319266890692),
            name: 'opponentId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(5, 5465536376528986834),
            relationTarget: 'UserEntity'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 7578632378595450354),
            name: 'ownerId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(6, 7028551237239944258),
            relationTarget: 'UserEntity'),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 5942505151512357888),
            name: 'avatarId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(7, 4362633030172730483),
            relationTarget: 'AvatarEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(4, 5012849246139480832),
      name: 'MessageEntity',
      lastPropertyId: const obx_int.IdUid(8, 7567633610019030123),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8738776819488037),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 7002687406836241592),
            name: 'uid',
            type: 9,
            flags: 2080,
            indexId: const obx_int.IdUid(8, 4745130895513277435)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 9127660167613834806),
            name: 'from',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 4073551582715204272),
            name: 'cid',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 4394882411289672412),
            name: 'rawStatus',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 7519794114385237563),
            name: 'body',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 5781198741257241343),
            name: 't',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 7567633610019030123),
            name: 'createdAt',
            type: 10,
            flags: 0)
      ],
      relations: <obx_int.ModelRelation>[
        obx_int.ModelRelation(
            id: const obx_int.IdUid(1, 2281992071706767730),
            name: 'attachments',
            targetId: const obx_int.IdUid(1, 2083168856616622261))
      ],
      backlinks: <obx_int.ModelBacklink>[]),
  obx_int.ModelEntity(
      id: const obx_int.IdUid(7, 6012607412223436967),
      name: 'UserEntity',
      lastPropertyId: const obx_int.IdUid(12, 34888985269025050),
      flags: 0,
      properties: <obx_int.ModelProperty>[
        obx_int.ModelProperty(
            id: const obx_int.IdUid(1, 8740075846196374882),
            name: 'id',
            type: 6,
            flags: 1),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(2, 5800900320973295407),
            name: 'uid',
            type: 9,
            flags: 34848,
            indexId: const obx_int.IdUid(13, 4839873385501465419)),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(3, 8640554254403841953),
            name: 'deviceId',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(4, 2172023124059614591),
            name: 'createdAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(5, 811411619103627512),
            name: 'updatedAt',
            type: 10,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(6, 3267521444689283243),
            name: 'recentActivity',
            type: 6,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(7, 2639370258575167313),
            name: 'login',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(8, 6792097179376439446),
            name: 'firstName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(9, 5710713795623848612),
            name: 'lastName',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(10, 4217675935215597774),
            name: 'phone',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(11, 8971578261290097735),
            name: 'email',
            type: 9,
            flags: 0),
        obx_int.ModelProperty(
            id: const obx_int.IdUid(12, 34888985269025050),
            name: 'avatarId',
            type: 11,
            flags: 520,
            indexId: const obx_int.IdUid(14, 2498619510712387571),
            relationTarget: 'AvatarEntity')
      ],
      relations: <obx_int.ModelRelation>[],
      backlinks: <obx_int.ModelBacklink>[])
];

/// Shortcut for [obx.Store.new] that passes [getObjectBoxModel] and for Flutter
/// apps by default a [directory] using `defaultStoreDirectory()` from the
/// ObjectBox Flutter library.
///
/// Note: for desktop apps it is recommended to specify a unique [directory].
///
/// See [obx.Store.new] for an explanation of all parameters.
///
/// For Flutter apps, also calls `loadObjectBoxLibraryAndroidCompat()` from
/// the ObjectBox Flutter library to fix loading the native ObjectBox library
/// on Android 6 and older.
Future<obx.Store> openStore(
    {String? directory,
    int? maxDBSizeInKB,
    int? maxDataSizeInKB,
    int? fileMode,
    int? maxReaders,
    bool queriesCaseSensitiveDefault = true,
    String? macosApplicationGroup}) async {
  await loadObjectBoxLibraryAndroidCompat();
  return obx.Store(getObjectBoxModel(),
      directory: directory ?? (await defaultStoreDirectory()).path,
      maxDBSizeInKB: maxDBSizeInKB,
      maxDataSizeInKB: maxDataSizeInKB,
      fileMode: fileMode,
      maxReaders: maxReaders,
      queriesCaseSensitiveDefault: queriesCaseSensitiveDefault,
      macosApplicationGroup: macosApplicationGroup);
}

/// Returns the ObjectBox model definition for this project for use with
/// [obx.Store.new].
obx_int.ModelDefinition getObjectBoxModel() {
  final model = obx_int.ModelInfo(
      entities: _entities,
      lastEntityId: const obx_int.IdUid(7, 6012607412223436967),
      lastIndexId: const obx_int.IdUid(14, 2498619510712387571),
      lastRelationId: const obx_int.IdUid(1, 2281992071706767730),
      lastSequenceId: const obx_int.IdUid(0, 0),
      retiredEntityUids: const [8221608220756309685, 3916919191516272112],
      retiredIndexUids: const [],
      retiredPropertyUids: const [
        5244948909752663107,
        642035060693614009,
        3131801735437468855,
        7717702637457311038,
        6444097050439138616,
        2052978247185038202,
        3759082206816062884,
        4171243892512299453,
        7660760250429865946,
        7994521092493067568,
        2753590088175921176,
        6723871787072869107,
        3672367778271562063,
        6917676645652591844,
        103343067583914471,
        1719497191968112232,
        125456544499571799,
        135999312779228694,
        1224887090371269290,
        5677110412226819126,
        3854621785786133919,
        4183038334923145217,
        9205162562036445098,
        4117982081165635192
      ],
      retiredRelationUids: const [],
      modelVersion: 5,
      modelVersionParserMinimum: 5,
      version: 1);

  final bindings = <Type, obx_int.EntityDefinition>{
    AttachmentEntity: obx_int.EntityDefinition<AttachmentEntity>(
        model: _entities[0],
        toOneRelations: (AttachmentEntity object) => [],
        toManyRelations: (AttachmentEntity object) => {},
        getId: (AttachmentEntity object) => object.id,
        setId: (AttachmentEntity object, int id) {
          object.id = id;
        },
        objectToFB: (AttachmentEntity object, fb.Builder fbb) {
          final fileIdOffset =
              object.fileId == null ? null : fbb.writeString(object.fileId!);
          final fileNameOffset = object.fileName == null
              ? null
              : fbb.writeString(object.fileName!);
          final fileBlurHashOffset = object.fileBlurHash == null
              ? null
              : fbb.writeString(object.fileBlurHash!);
          fbb.startTable(5);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, fileIdOffset);
          fbb.addOffset(2, fileNameOffset);
          fbb.addOffset(3, fileBlurHashOffset);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          final fileIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final fileNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final fileBlurHashParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final object = AttachmentEntity(
              id: idParam,
              fileId: fileIdParam,
              fileName: fileNameParam,
              fileBlurHash: fileBlurHashParam);

          return object;
        }),
    AvatarEntity: obx_int.EntityDefinition<AvatarEntity>(
        model: _entities[1],
        toOneRelations: (AvatarEntity object) => [],
        toManyRelations: (AvatarEntity object) => {},
        getId: (AvatarEntity object) => object.id,
        setId: (AvatarEntity object, int id) {
          object.id = id;
        },
        objectToFB: (AvatarEntity object, fb.Builder fbb) {
          final fileIdOffset =
              object.fileId == null ? null : fbb.writeString(object.fileId!);
          final fileNameOffset = object.fileName == null
              ? null
              : fbb.writeString(object.fileName!);
          final fileBlurHashOffset = object.fileBlurHash == null
              ? null
              : fbb.writeString(object.fileBlurHash!);
          final imageUrlOffset = object.imageUrl == null
              ? null
              : fbb.writeString(object.imageUrl!);
          fbb.startTable(6);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, fileIdOffset);
          fbb.addOffset(2, fileNameOffset);
          fbb.addOffset(3, fileBlurHashOffset);
          fbb.addOffset(4, imageUrlOffset);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          final fileIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final fileNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final fileBlurHashParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 10);
          final imageUrlParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final object = AvatarEntity(
              id: idParam,
              fileId: fileIdParam,
              fileName: fileNameParam,
              fileBlurHash: fileBlurHashParam,
              imageUrl: imageUrlParam);

          return object;
        }),
    ConversationEntity: obx_int.EntityDefinition<ConversationEntity>(
        model: _entities[2],
        toOneRelations: (ConversationEntity object) =>
            [object.lastMessage, object.opponent, object.owner, object.avatar],
        toManyRelations: (ConversationEntity object) => {},
        getId: (ConversationEntity object) => object.id,
        setId: (ConversationEntity object, int id) {
          object.id = id;
        },
        objectToFB: (ConversationEntity object, fb.Builder fbb) {
          final uidOffset =
              object.uid == null ? null : fbb.writeString(object.uid!);
          final typeOffset =
              object.type == null ? null : fbb.writeString(object.type!);
          final nameOffset =
              object.name == null ? null : fbb.writeString(object.name!);
          final descriptionOffset = object.description == null
              ? null
              : fbb.writeString(object.description!);
          fbb.startTable(13);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, uidOffset);
          fbb.addInt64(2, object.createdAt?.millisecondsSinceEpoch);
          fbb.addInt64(3, object.updatedAt?.millisecondsSinceEpoch);
          fbb.addOffset(4, typeOffset);
          fbb.addOffset(5, nameOffset);
          fbb.addOffset(6, descriptionOffset);
          fbb.addInt64(7, object.unreadMessagesCount);
          fbb.addInt64(8, object.lastMessage.targetId);
          fbb.addInt64(9, object.opponent.targetId);
          fbb.addInt64(10, object.owner.targetId);
          fbb.addInt64(11, object.avatar.targetId);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final createdAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 8);
          final updatedAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          final uidParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final createdAtParam = createdAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
          final updatedAtParam = updatedAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
          final nameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final typeParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final unreadMessagesCountParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final descriptionParam =
              const fb.StringReader(asciiOptimization: true)
                  .vTableGetNullable(buffer, rootOffset, 16);
          final object = ConversationEntity(
              id: idParam,
              uid: uidParam,
              createdAt: createdAtParam,
              updatedAt: updatedAtParam,
              name: nameParam,
              type: typeParam,
              unreadMessagesCount: unreadMessagesCountParam,
              description: descriptionParam);
          object.lastMessage.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 20, 0);
          object.lastMessage.attach(store);
          object.opponent.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 22, 0);
          object.opponent.attach(store);
          object.owner.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 24, 0);
          object.owner.attach(store);
          object.avatar.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.avatar.attach(store);
          return object;
        }),
    MessageEntity: obx_int.EntityDefinition<MessageEntity>(
        model: _entities[3],
        toOneRelations: (MessageEntity object) => [],
        toManyRelations: (MessageEntity object) => {
              obx_int.RelInfo<MessageEntity>.toMany(1, object.id!):
                  object.attachments
            },
        getId: (MessageEntity object) => object.id,
        setId: (MessageEntity object, int id) {
          object.id = id;
        },
        objectToFB: (MessageEntity object, fb.Builder fbb) {
          final uidOffset =
              object.uid == null ? null : fbb.writeString(object.uid!);
          final fromOffset =
              object.from == null ? null : fbb.writeString(object.from!);
          final cidOffset =
              object.cid == null ? null : fbb.writeString(object.cid!);
          final rawStatusOffset = object.rawStatus == null
              ? null
              : fbb.writeString(object.rawStatus!);
          final bodyOffset =
              object.body == null ? null : fbb.writeString(object.body!);
          fbb.startTable(9);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, uidOffset);
          fbb.addOffset(2, fromOffset);
          fbb.addOffset(3, cidOffset);
          fbb.addOffset(4, rawStatusOffset);
          fbb.addOffset(5, bodyOffset);
          fbb.addInt64(6, object.t);
          fbb.addInt64(7, object.createdAt?.millisecondsSinceEpoch);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final createdAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 18);
          final idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          final uidParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final fromParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final cidParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 10);
          final rawStatusParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 12);
          final bodyParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 14);
          final createdAtParam = createdAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
          final tParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 16);
          final object = MessageEntity(
              id: idParam,
              uid: uidParam,
              from: fromParam,
              cid: cidParam,
              rawStatus: rawStatusParam,
              body: bodyParam,
              createdAt: createdAtParam,
              t: tParam);
          obx_int.InternalToManyAccess.setRelInfo<MessageEntity>(
              object.attachments,
              store,
              obx_int.RelInfo<MessageEntity>.toMany(1, object.id!));
          return object;
        }),
    UserEntity: obx_int.EntityDefinition<UserEntity>(
        model: _entities[4],
        toOneRelations: (UserEntity object) => [object.avatar],
        toManyRelations: (UserEntity object) => {},
        getId: (UserEntity object) => object.id,
        setId: (UserEntity object, int id) {
          object.id = id;
        },
        objectToFB: (UserEntity object, fb.Builder fbb) {
          final uidOffset =
              object.uid == null ? null : fbb.writeString(object.uid!);
          final deviceIdOffset = object.deviceId == null
              ? null
              : fbb.writeString(object.deviceId!);
          final loginOffset =
              object.login == null ? null : fbb.writeString(object.login!);
          final firstNameOffset = object.firstName == null
              ? null
              : fbb.writeString(object.firstName!);
          final lastNameOffset = object.lastName == null
              ? null
              : fbb.writeString(object.lastName!);
          final phoneOffset =
              object.phone == null ? null : fbb.writeString(object.phone!);
          final emailOffset =
              object.email == null ? null : fbb.writeString(object.email!);
          fbb.startTable(13);
          fbb.addInt64(0, object.id ?? 0);
          fbb.addOffset(1, uidOffset);
          fbb.addOffset(2, deviceIdOffset);
          fbb.addInt64(3, object.createdAt?.millisecondsSinceEpoch);
          fbb.addInt64(4, object.updatedAt?.millisecondsSinceEpoch);
          fbb.addInt64(5, object.recentActivity);
          fbb.addOffset(6, loginOffset);
          fbb.addOffset(7, firstNameOffset);
          fbb.addOffset(8, lastNameOffset);
          fbb.addOffset(9, phoneOffset);
          fbb.addOffset(10, emailOffset);
          fbb.addInt64(11, object.avatar.targetId);
          fbb.finish(fbb.endTable());
          return object.id ?? 0;
        },
        objectFromFB: (obx.Store store, ByteData fbData) {
          final buffer = fb.BufferContext(fbData);
          final rootOffset = buffer.derefObject(0);
          final createdAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 10);
          final updatedAtValue =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 12);
          final idParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 4);
          final uidParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 6);
          final deviceIdParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 8);
          final createdAtParam = createdAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(createdAtValue);
          final updatedAtParam = updatedAtValue == null
              ? null
              : DateTime.fromMillisecondsSinceEpoch(updatedAtValue);
          final recentActivityParam =
              const fb.Int64Reader().vTableGetNullable(buffer, rootOffset, 14);
          final loginParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 16);
          final firstNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 18);
          final lastNameParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 20);
          final phoneParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 22);
          final emailParam = const fb.StringReader(asciiOptimization: true)
              .vTableGetNullable(buffer, rootOffset, 24);
          final object = UserEntity(
              id: idParam,
              uid: uidParam,
              deviceId: deviceIdParam,
              createdAt: createdAtParam,
              updatedAt: updatedAtParam,
              recentActivity: recentActivityParam,
              login: loginParam,
              firstName: firstNameParam,
              lastName: lastNameParam,
              phone: phoneParam,
              email: emailParam);
          object.avatar.targetId =
              const fb.Int64Reader().vTableGet(buffer, rootOffset, 26, 0);
          object.avatar.attach(store);
          return object;
        })
  };

  return obx_int.ModelDefinition(model, bindings);
}

/// [AttachmentEntity] entity fields to define ObjectBox queries.
class AttachmentEntity_ {
  /// See [AttachmentEntity.id].
  static final id =
      obx.QueryIntegerProperty<AttachmentEntity>(_entities[0].properties[0]);

  /// See [AttachmentEntity.fileId].
  static final fileId =
      obx.QueryStringProperty<AttachmentEntity>(_entities[0].properties[1]);

  /// See [AttachmentEntity.fileName].
  static final fileName =
      obx.QueryStringProperty<AttachmentEntity>(_entities[0].properties[2]);

  /// See [AttachmentEntity.fileBlurHash].
  static final fileBlurHash =
      obx.QueryStringProperty<AttachmentEntity>(_entities[0].properties[3]);
}

/// [AvatarEntity] entity fields to define ObjectBox queries.
class AvatarEntity_ {
  /// See [AvatarEntity.id].
  static final id =
      obx.QueryIntegerProperty<AvatarEntity>(_entities[1].properties[0]);

  /// See [AvatarEntity.fileId].
  static final fileId =
      obx.QueryStringProperty<AvatarEntity>(_entities[1].properties[1]);

  /// See [AvatarEntity.fileName].
  static final fileName =
      obx.QueryStringProperty<AvatarEntity>(_entities[1].properties[2]);

  /// See [AvatarEntity.fileBlurHash].
  static final fileBlurHash =
      obx.QueryStringProperty<AvatarEntity>(_entities[1].properties[3]);

  /// See [AvatarEntity.imageUrl].
  static final imageUrl =
      obx.QueryStringProperty<AvatarEntity>(_entities[1].properties[4]);
}

/// [ConversationEntity] entity fields to define ObjectBox queries.
class ConversationEntity_ {
  /// See [ConversationEntity.id].
  static final id =
      obx.QueryIntegerProperty<ConversationEntity>(_entities[2].properties[0]);

  /// See [ConversationEntity.uid].
  static final uid =
      obx.QueryStringProperty<ConversationEntity>(_entities[2].properties[1]);

  /// See [ConversationEntity.createdAt].
  static final createdAt =
      obx.QueryDateProperty<ConversationEntity>(_entities[2].properties[2]);

  /// See [ConversationEntity.updatedAt].
  static final updatedAt =
      obx.QueryDateProperty<ConversationEntity>(_entities[2].properties[3]);

  /// See [ConversationEntity.type].
  static final type =
      obx.QueryStringProperty<ConversationEntity>(_entities[2].properties[4]);

  /// See [ConversationEntity.name].
  static final name =
      obx.QueryStringProperty<ConversationEntity>(_entities[2].properties[5]);

  /// See [ConversationEntity.description].
  static final description =
      obx.QueryStringProperty<ConversationEntity>(_entities[2].properties[6]);

  /// See [ConversationEntity.unreadMessagesCount].
  static final unreadMessagesCount =
      obx.QueryIntegerProperty<ConversationEntity>(_entities[2].properties[7]);

  /// See [ConversationEntity.lastMessage].
  static final lastMessage =
      obx.QueryRelationToOne<ConversationEntity, MessageEntity>(
          _entities[2].properties[8]);

  /// See [ConversationEntity.opponent].
  static final opponent =
      obx.QueryRelationToOne<ConversationEntity, UserEntity>(
          _entities[2].properties[9]);

  /// See [ConversationEntity.owner].
  static final owner = obx.QueryRelationToOne<ConversationEntity, UserEntity>(
      _entities[2].properties[10]);

  /// See [ConversationEntity.avatar].
  static final avatar =
      obx.QueryRelationToOne<ConversationEntity, AvatarEntity>(
          _entities[2].properties[11]);
}

/// [MessageEntity] entity fields to define ObjectBox queries.
class MessageEntity_ {
  /// See [MessageEntity.id].
  static final id =
      obx.QueryIntegerProperty<MessageEntity>(_entities[3].properties[0]);

  /// See [MessageEntity.uid].
  static final uid =
      obx.QueryStringProperty<MessageEntity>(_entities[3].properties[1]);

  /// See [MessageEntity.from].
  static final from =
      obx.QueryStringProperty<MessageEntity>(_entities[3].properties[2]);

  /// See [MessageEntity.cid].
  static final cid =
      obx.QueryStringProperty<MessageEntity>(_entities[3].properties[3]);

  /// See [MessageEntity.rawStatus].
  static final rawStatus =
      obx.QueryStringProperty<MessageEntity>(_entities[3].properties[4]);

  /// See [MessageEntity.body].
  static final body =
      obx.QueryStringProperty<MessageEntity>(_entities[3].properties[5]);

  /// See [MessageEntity.t].
  static final t =
      obx.QueryIntegerProperty<MessageEntity>(_entities[3].properties[6]);

  /// See [MessageEntity.createdAt].
  static final createdAt =
      obx.QueryDateProperty<MessageEntity>(_entities[3].properties[7]);

  /// see [MessageEntity.attachments]
  static final attachments =
      obx.QueryRelationToMany<MessageEntity, AttachmentEntity>(
          _entities[3].relations[0]);
}

/// [UserEntity] entity fields to define ObjectBox queries.
class UserEntity_ {
  /// See [UserEntity.id].
  static final id =
      obx.QueryIntegerProperty<UserEntity>(_entities[4].properties[0]);

  /// See [UserEntity.uid].
  static final uid =
      obx.QueryStringProperty<UserEntity>(_entities[4].properties[1]);

  /// See [UserEntity.deviceId].
  static final deviceId =
      obx.QueryStringProperty<UserEntity>(_entities[4].properties[2]);

  /// See [UserEntity.createdAt].
  static final createdAt =
      obx.QueryDateProperty<UserEntity>(_entities[4].properties[3]);

  /// See [UserEntity.updatedAt].
  static final updatedAt =
      obx.QueryDateProperty<UserEntity>(_entities[4].properties[4]);

  /// See [UserEntity.recentActivity].
  static final recentActivity =
      obx.QueryIntegerProperty<UserEntity>(_entities[4].properties[5]);

  /// See [UserEntity.login].
  static final login =
      obx.QueryStringProperty<UserEntity>(_entities[4].properties[6]);

  /// See [UserEntity.firstName].
  static final firstName =
      obx.QueryStringProperty<UserEntity>(_entities[4].properties[7]);

  /// See [UserEntity.lastName].
  static final lastName =
      obx.QueryStringProperty<UserEntity>(_entities[4].properties[8]);

  /// See [UserEntity.phone].
  static final phone =
      obx.QueryStringProperty<UserEntity>(_entities[4].properties[9]);

  /// See [UserEntity.email].
  static final email =
      obx.QueryStringProperty<UserEntity>(_entities[4].properties[10]);

  /// See [UserEntity.avatar].
  static final avatar = obx.QueryRelationToOne<UserEntity, AvatarEntity>(
      _entities[4].properties[11]);
}
